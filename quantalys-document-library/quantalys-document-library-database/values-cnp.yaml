postgresql:
  image:
    tag: 14.4.0-debian-11-r23
  primary:
    service:
      type: NodePort
    initdb:
      scripts:
        00.sql: |
          CREATE DATABASE document_library;

          -- CI
          CREATE ROLE "document_library_reader" WITH
            LOGIN
            NOSUPERUSER
            NOCREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD 'g3ZZvZ1hie';
          CREATE ROLE "svc_document_library" WITH
            LOGIN
            NOSUPERUSER
            NOCREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD 'QvhcNiC1p6';
          CREATE ROLE "svc_document_library_ci" WITH
            LOGIN
            NOSUPERUSER
            CREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD '03ND693Qj5';
        01.sql: |
          \connect document_library

          -- Create SCHEMA
          CREATE SCHEMA IF NOT EXISTS cnp;
          -- Default grants
          REVOKE CONNECT ON DATABASE document_library FROM PUBLIC;
          REVOKE ALL ON ALL TABLES IN SCHEMA public FROM PUBLIC;
          GRANT ALL ON DATABASE document_library TO postgres;
          -- Grants to document_library_reader
          GRANT CONNECT ON DATABASE document_library TO "document_library_reader";
          GRANT USAGE ON SCHEMA cnp TO "document_library_reader";
          GRANT SELECT ON ALL TABLES IN SCHEMA cnp TO "document_library_reader";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT ON TABLES TO "document_library_reader";
          GRANT CONNECT ON DATABASE document_library TO "svc_document_library";
          -- Grants to svc_document_library
          GRANT USAGE ON SCHEMA cnp TO "svc_document_library";
          GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA cnp TO "svc_document_library";
          GRANT USAGE,SELECT ON ALL SEQUENCES IN SCHEMA cnp to "svc_document_library";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO "svc_document_library";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT ON TABLES TO "document_library_reader";
          -- Create Migration Table
          CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
            migration_id character varying(150) NOT NULL,
            product_version character varying(32) NOT NULL,
            CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
          );
          -- Create Tables
          START TRANSACTION;          
          CREATE TABLE cnp.category (
              id uuid NOT NULL,
              name text NULL,
              label text NULL,
              parent_id uuid NULL,
              "order" integer NOT NULL,
              tenant_id varchar(36) NOT NULL,
              user_creation text NULL,
              user_modification text NULL,
              creation_date timestamp with time zone NOT NULL,
              modified_date timestamp with time zone NULL,
              enabled boolean NOT NULL,
              CONSTRAINT pk_category PRIMARY KEY (id),
              CONSTRAINT fk_category_category_parent_id FOREIGN KEY (parent_id) REFERENCES cnp.category (id)
          );
          CREATE TABLE cnp.document_group (
              id uuid NOT NULL,
              name text NULL,
              label text NULL,
              "order" integer NOT NULL,
              tenant_id varchar(36) NOT NULL,
              user_creation text NULL,
              user_modification text NULL,
              creation_date timestamp with time zone NOT NULL,
              modified_date timestamp with time zone NULL,
              enabled boolean NOT NULL,
              CONSTRAINT pk_document_group PRIMARY KEY (id)
          );
          CREATE TABLE cnp.document_library (
              id uuid NOT NULL,
              title text NOT NULL,
              file_name text NOT NULL,
              reference text NULL,
              validity_date_from timestamp with time zone NULL,
              validity_date_to timestamp with time zone NULL,
              versioning_date timestamp with time zone NULL,
              score integer NOT NULL,
              tenant_id varchar(36) NOT NULL,
              user_creation text NULL,
              user_modification text NULL,
              creation_date timestamp with time zone NOT NULL,
              modified_date timestamp with time zone NULL,
              enabled boolean NOT NULL,
              CONSTRAINT pk_document_library PRIMARY KEY (id)
          );
          CREATE TABLE cnp.category_value (
              id uuid NOT NULL,
              category_id uuid NOT NULL,
              name text NULL,
              label text NULL,
              "order" integer NOT NULL,
              tenant_id varchar(36) NOT NULL,
              user_creation text NULL,
              user_modification text NULL,
              creation_date timestamp with time zone NOT NULL,
              modified_date timestamp with time zone NULL,
              enabled boolean NOT NULL,
              CONSTRAINT pk_category_value PRIMARY KEY (id),
              CONSTRAINT fk_category_value_category_category_id FOREIGN KEY (category_id) REFERENCES cnp.category (id) ON DELETE CASCADE
          );
          CREATE TABLE cnp.document_group_categories (
              categories_id uuid NOT NULL,
              document_groups_id uuid NOT NULL,
              CONSTRAINT pk_document_group_categories PRIMARY KEY (categories_id, document_groups_id),
              CONSTRAINT fk_document_group_categories_category_categories_id FOREIGN KEY (categories_id) REFERENCES cnp.category (id) ON DELETE CASCADE,
              CONSTRAINT fk_document_group_categories_document_group_document_groups_id FOREIGN KEY (document_groups_id) REFERENCES cnp.document_group (id) ON DELETE CASCADE
          );
          CREATE TABLE cnp.document_library_document_group (
              document_groups_id uuid NOT NULL,
              documents_id uuid NOT NULL,
              CONSTRAINT pk_document_library_document_group PRIMARY KEY (document_groups_id, documents_id),
              CONSTRAINT fk_document_library_document_group_document_group_document_gro FOREIGN KEY (document_groups_id) REFERENCES cnp.document_group (id) ON DELETE CASCADE,
              CONSTRAINT fk_document_library_document_group_document_library_documents_ FOREIGN KEY (documents_id) REFERENCES cnp.document_library (id) ON DELETE CASCADE
          );
          CREATE TABLE cnp.document_library_category_values (
              category_values_id uuid NOT NULL,
              documents_id uuid NOT NULL,
              CONSTRAINT pk_document_library_category_values PRIMARY KEY (category_values_id, documents_id),
              CONSTRAINT fk_document_library_category_values_category_value_category_va FOREIGN KEY (category_values_id) REFERENCES cnp.category_value (id) ON DELETE CASCADE,
              CONSTRAINT fk_document_library_category_values_document_library_documents FOREIGN KEY (documents_id) REFERENCES cnp.document_library (id) ON DELETE CASCADE
          );
          CREATE INDEX ix_category_parent_id ON cnp.category (parent_id);
          CREATE INDEX ix_category_tenant_id ON cnp.category (tenant_id);
          CREATE INDEX ix_category_value_category_id ON cnp.category_value (category_id);
          CREATE INDEX ix_category_value_tenant_id ON cnp.category_value (tenant_id);
          CREATE INDEX ix_document_group_tenant_id ON cnp.document_group (tenant_id);
          CREATE INDEX ix_document_group_categories_document_groups_id ON cnp.document_group_categories (document_groups_id);
          CREATE INDEX ix_document_library_tenant_id ON cnp.document_library (tenant_id);
          CREATE INDEX ix_document_library_category_values_documents_id ON cnp.document_library_category_values (documents_id);
          CREATE INDEX ix_document_library_document_group_documents_id ON cnp.document_library_document_group (documents_id);
          INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
          VALUES ('20240117080358_initial', '7.0.14');
          COMMIT;
          START TRANSACTION;
          CREATE TABLE cnp.document_library_events (
              id uuid NOT NULL,
              document_id uuid NOT NULL,
              event_type integer NOT NULL,
              creation_date timestamp with time zone NOT NULL,
              user_id uuid NOT NULL,
              user_role text NOT NULL,
              tenant_id varchar(36) NOT NULL,
              CONSTRAINT pk_document_library_events PRIMARY KEY (id),
              CONSTRAINT fk_document_library_events_document_library_document_id FOREIGN KEY (document_id) REFERENCES cnp.document_library (id) ON DELETE CASCADE
          );
          CREATE INDEX ix_document_library_events_document_id ON cnp.document_library_events (document_id);
          CREATE INDEX ix_document_library_events_tenant_id ON cnp.document_library_events (tenant_id);
          CREATE INDEX ix_document_library_events_user_role ON cnp.document_library_events (user_role);
          INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
          VALUES ('20240118123234_documentEvents', '7.0.14');
          COMMIT;
          START TRANSACTION;
          ALTER TABLE cnp.document_library DROP COLUMN score;
          INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
          VALUES ('20240123142720_deleteScoreProperty', '7.0.14');
          COMMIT;
          START TRANSACTION;
          ALTER TABLE cnp.document_library ADD slug text NULL DEFAULT '';
          INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
          VALUES ('20240123154132_addSlug', '7.0.14');
          COMMIT;
          START TRANSACTION;
          ALTER TABLE cnp.document_library ALTER COLUMN slug TYPE varchar(100);
          INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
          VALUES ('20240124123433_slugDataType', '7.0.14');
          COMMIT;
  metrics:
    auth:
      database: document_library
  migration_isolate: false
  backup:
    enabled: false
    cron:
      image:
        tag: 13-9
      schedule: "0 2 * * *" # 2am every day
      storageSize: 1Gi
      env:
        - name: DB_LOGIN
          value: svc_document_library_ci
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: password
        - name: FTP_LOGIN
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: ftp-login
        - name: FTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: ftp-password
        - name: PGPASSFILE
          value: /tmp/.pgpass
        - name: RETENTION_DAY
          value: "10"
    database:
      name: document_library

