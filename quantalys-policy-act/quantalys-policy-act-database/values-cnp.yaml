postgresql:
  image:
    tag: 14.4.0-debian-11-r23

  primary:
    service:
      type: NodePort
    initdb:
      scripts:
        00.sql: |
          CREATE DATABASE policy_acts;

          -- CI
          CREATE ROLE "policy_act_reader" WITH
            LOGIN
            NOSUPERUSER
            NOCREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD 'YgNrgOFNXs';
          CREATE ROLE "svc_policy_act" WITH
            LOGIN
            NOSUPERUSER
            NOCREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD 'WPntyea1G1';
          CREATE ROLE "svc_policy_act_ci" WITH
            LOGIN
            NOSUPERUSER
            CREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD 'jJnYxAtA1H';
        01.sql: |
          \connect policy_acts
          -- Create Schema
          CREATE SCHEMA IF NOT EXISTS cnp;
          -- Default grants
          REVOKE CONNECT ON DATABASE policy_acts FROM PUBLIC;
          REVOKE ALL ON ALL TABLES IN SCHEMA public FROM PUBLIC;
          GRANT ALL ON DATABASE policy_acts TO postgres;
          -- PolicyAct reader account
          GRANT CONNECT ON DATABASE policy_acts TO "policy_act_reader";
          GRANT USAGE ON SCHEMA cnp TO "policy_act_reader";
          GRANT SELECT ON ALL TABLES IN SCHEMA cnp TO "policy_act_reader";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT ON TABLES TO "policy_act_reader";
          GRANT CONNECT ON DATABASE policy_acts TO "svc_policy_act";
          -- PolicyAct service account
          GRANT USAGE ON SCHEMA cnp TO "svc_policy_act";
          GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA cnp TO "svc_policy_act";
          GRANT USAGE,SELECT ON ALL SEQUENCES IN SCHEMA cnp to "svc_policy_act";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO "svc_policy_act";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT ON TABLES TO "policy_act_reader";
          -- Create tables
          CREATE TABLE IF NOT EXISTS __EFMigrationsHistory (
              migration_id character varying(150) NOT NULL,
              product_version character varying(32) NOT NULL,
              CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
          );

          CREATE TABLE cnp.act_holder (
              act_holder_id text NOT NULL,
              policy_holder_id text NULL,
              policy_id text NULL,
              content text NULL,
              CONSTRAINT pk_act_holder PRIMARY KEY (act_holder_id)
          );

          CREATE TABLE cnp.semi_digital_act (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              arbitrage_data_id uuid NOT NULL,
              policy_holder_id VARCHAR(50) NOT NULL,
              policy_id VARCHAR(50) NOT NULL,
              insurer_code VARCHAR(50) NOT NULL,
              shift_type VARCHAR(50) NOT NULL,
              created_at timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
              last_modified timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
              created_by VARCHAR(50) NOT NULL,
              last_modified_by VARCHAR(50) NOT NULL,
              content text NULL,
              CONSTRAINT pk_semi_digital_act PRIMARY KEY (id)
          );

          CREATE TABLE cnp.shift_tracker (
              Id integer GENERATED BY DEFAULT AS IDENTITY,
              UserId VARCHAR(50) NOT NULL,
              InsurerCode VARCHAR(50) NOT NULL,
              PolicyHolderId VARCHAR(50) NOT NULL,
              PolicyId VARCHAR(50) NOT NULL,
              ShiftId VARCHAR(50) NOT NULL,
              DivestmentType VARCHAR(50) NOT NULL,
              SignatureStatus VARCHAR(50) NOT NULL,
              SignatureMode VARCHAR(50) NOT NULL,
              SignatureType VARCHAR(50) NOT NULL,
              SignatureId VARCHAR(50) NULL,
              CurrentStep VARCHAR(50) NOT NULL,
              IsSubmitted BOOL NOT NULL,
              CreatedAt timestamp NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
              LastModified timestamp NOT NULL,
              CreatedBy VARCHAR(50) NOT NULL,
              LastModifiedBy VARCHAR(50) NOT NULL,
              CONSTRAINT pk_shift_tracker PRIMARY KEY (Id)
          );

          CREATE TABLE cnp.semi_digital_act_documents (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              document_id VARCHAR(50) NOT NULL,
              shift_id integer NOT NULL,
              CONSTRAINT pk_semi_digital_act_documents PRIMARY KEY (id),
              CONSTRAINT fk_semi_digital_act_documents_semi_digital_act_semi_digital_ac FOREIGN KEY (shift_id) REFERENCES cnp.semi_digital_act (id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.divestment (
              Id integer GENERATED BY DEFAULT AS IDENTITY,
              ShiftId integer NOT NULL,
              Code VARCHAR(50) NOT NULL,
              Name VARCHAR(50) NULL,
              InvestmentManagmentMode VARCHAR(50) NOT NULL,
              HeldAmount decimal NOT NULL,
              DivestmentAmount decimal NOT NULL,
              DivestmentPercentage decimal NOT NULL,
              CreatedAt timestamp NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
              LastModified timestamp NOT NULL,
              CreatedBy VARCHAR(50) NOT NULL,
              LastModifiedBy VARCHAR(50) NOT NULL,
              CONSTRAINT pk_divestment PRIMARY KEY (Id),
              CONSTRAINT fk_divestment_shift_tracker_shift_tracker_data_id FOREIGN KEY (ShiftId) REFERENCES cnp.shift_tracker (Id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.investment (
              Id integer GENERATED BY DEFAULT AS IDENTITY,
              ShiftId integer NOT NULL,
              Code VARCHAR(50) NOT NULL,
              Name VARCHAR(50) NULL,
              InvestmentManagmentMode VARCHAR(50) NOT NULL,
              HeldAmount VARCHAR(50) NOT NULL,
              InvestmentPercentage decimal NOT NULL,
              CreatedAt timestamp NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
              LastModified timestamp NOT NULL,
              CreatedBy VARCHAR(50) NOT NULL,
              LastModifiedBy VARCHAR(50) NOT NULL,
              CONSTRAINT pk_investment PRIMARY KEY (Id),
              CONSTRAINT fk_investment_shift_tracker_shift_tracker_data_id FOREIGN KEY (ShiftId) REFERENCES cnp.shift_tracker (Id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.shift_additional_infos (
              Id integer GENERATED BY DEFAULT AS IDENTITY,
              ShiftId integer NOT NULL,
              City VARCHAR(50) NULL,
              Date VARCHAR(200) NULL,
              Observations VARCHAR(50) NULL,
              Attestation1 BOOL NOT NULL,
              Attestation2 BOOL NOT NULL,
              CreatedAt timestamp NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
              LastModified timestamp NOT NULL,
              CreatedBy VARCHAR(50) NOT NULL,
              LastModifiedBy VARCHAR(50) NOT NULL,
              CONSTRAINT pk_shift_additional_infos PRIMARY KEY (Id),
              CONSTRAINT fk_shift_additional_infos_shift_tracker_shift_tracker_data_id FOREIGN KEY (ShiftId) REFERENCES cnp.shift_tracker (Id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.shift_fees (
              Id integer GENERATED BY DEFAULT AS IDENTITY,
              ShiftId integer NOT NULL,
              ShiftFeesTotal decimal NOT NULL,
              TotalAmountDivested decimal NOT NULL,
              TotalAmountInvested decimal NOT NULL,
              ShiftFeesPercentage decimal NOT NULL,
              CreatedAt timestamp NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
              LastModified timestamp NOT NULL,
              CreatedBy VARCHAR(50) NOT NULL,
              LastModifiedBy VARCHAR(50) NOT NULL,
              CONSTRAINT pk_shift_fees PRIMARY KEY (Id),
              CONSTRAINT fk_shift_fees_shift_tracker_shift_tracker_data_id FOREIGN KEY (ShiftId) REFERENCES cnp.shift_tracker (Id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.shift_sign_documents (
              Id integer GENERATED BY DEFAULT AS IDENTITY,
              ShiftId integer NOT NULL,
              DocumentId VARCHAR(200) NOT NULL,
              CreatedAt timestamp NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
              LastModified timestamp NOT NULL,
              CreatedBy VARCHAR(50) NOT NULL,
              LastModifiedBy VARCHAR(50) NOT NULL,
              CONSTRAINT pk_shift_sign_documents PRIMARY KEY (Id),
              CONSTRAINT fk_shift_sign_documents_shift_tracker_shift_tracker_data_id FOREIGN KEY (ShiftId) REFERENCES cnp.shift_tracker (Id) ON DELETE CASCADE
          );

          CREATE INDEX ix_divestment_shift_id ON cnp.divestment (ShiftId);

          CREATE INDEX ix_investment_shift_id ON cnp.investment (ShiftId);

          CREATE INDEX ix_semi_digital_act_documents_shift_id ON cnp.semi_digital_act_documents (shift_id);

          CREATE UNIQUE INDEX ix_shift_additional_infos_shift_id ON cnp.shift_additional_infos (ShiftId);

          CREATE UNIQUE INDEX ix_shift_fees_shift_id ON cnp.shift_fees (ShiftId);

          CREATE INDEX ix_shift_sign_documents_shift_id ON cnp.shift_sign_documents (ShiftId);

          INSERT INTO __EFMigrationsHistory (migration_id, product_version) VALUES ('20230921121644_InitialMigration', '7.0.9');

  metrics:
    auth:
      database: policy_acts

  migration_isolate: false

  backup:
    enabled: false
    cron:
      image:
        tag: 13-9

      schedule: "0 2 * * *" # 2am every day
      storageSize: 1Gi

      env:
        - name: DB_LOGIN
          value: svc_policy_act_ci
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: password
        - name: FTP_LOGIN
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: ftp-login
        - name: FTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: ftp-password
        - name: PGPASSFILE
          value: /tmp/.pgpass
        - name: RETENTION_DAY
          value: "10"

    database:
      name: policy_acts

