postgresql:
  image:
    tag: 14.4.0-debian-11-r23
  primary:
    service:
      type: NodePort
    initdb:
      scripts:
        00.sql: |
          CREATE DATABASE policy_act_policyholders;

          -- CI
          CREATE ROLE "policy_act_policyholder_reader" WITH
            LOGIN
            NOSUPERUSER
            NOCREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD '1tiVMz1C';
          CREATE ROLE "svc_policy_act_policyholder" WITH
            LOGIN
            NOSUPERUSER
            NOCREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD 'DmS9Laqg';
          CREATE ROLE "svc_policy_act_policyholder_ci" WITH
            LOGIN
            NOSUPERUSER
            CREATEDB
            NOCREATEROLE
            INHERIT
            NOREPLICATION
            CONNECTION LIMIT -1
            PASSWORD 'nWqgBOSj';
        01.sql: |
          \connect policy_act_policyholders
          
          -- Create Schema
          CREATE SCHEMA IF NOT EXISTS cnp;
          
          -- Default grants
          REVOKE CONNECT ON DATABASE policy_act_policyholders FROM PUBLIC;
          REVOKE ALL ON ALL TABLES IN SCHEMA public FROM PUBLIC;
          GRANT ALL ON DATABASE policy_act_policyholders TO postgres;
          
          -- PolicyHolder reader account
          GRANT CONNECT ON DATABASE policy_act_policyholders TO "policy_act_policyholder_reader";
          GRANT USAGE ON SCHEMA cnp TO "policy_act_policyholder_reader";
          GRANT SELECT ON ALL TABLES IN SCHEMA cnp TO "policy_act_policyholder_reader";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT ON TABLES TO "policy_act_policyholder_reader";
          GRANT CONNECT ON DATABASE policy_act_policyholders TO "svc_policy_act_policyholder";
          
          -- PolicyHolder service account
          GRANT USAGE ON SCHEMA cnp TO "svc_policy_act_policyholder";
          GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA cnp TO "svc_policy_act_policyholder";
          GRANT USAGE,SELECT ON ALL SEQUENCES IN SCHEMA cnp to "svc_policy_act_policyholder";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO "svc_policy_act_policyholder";
          ALTER DEFAULT PRIVILEGES IN SCHEMA cnp GRANT SELECT ON TABLES TO "policy_act_policyholder_reader";
          
          -- Create tables
          START TRANSACTION;

          CREATE TABLE cnp.user_transaction (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              user_id varchar(50) NOT NULL,
              user_insurer_id varchar(50) NOT NULL,
              transaction_id varchar(50) NOT NULL,
              policy_id varchar(50) NOT NULL,
              policy_holder_id varchar(50) NOT NULL,
              is_finished boolean NOT NULL DEFAULT FALSE,
              signature_status varchar(25) NOT NULL,
              signature_mode varchar(25) NOT NULL,
              signature_type varchar(25) NOT NULL,
              current_step varchar(25) NOT NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NULL,
              CONSTRAINT pk_user_transaction PRIMARY KEY (id)
          );

          CREATE TABLE cnp.contact_details (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              policy_holder_id varchar(50) NOT NULL,
              principal_address varchar(200) NULL,
              principal_address_additional_details varchar(200) NULL,
              principal_address_zip_code varchar(200) NULL,
              principal_address_city varchar(200) NULL,
              principal_address_country varchar(200) NULL,
              tax_address varchar(200) NULL,
              tax_address_additional_details varchar(200) NULL,
              tax_address_zip_code varchar(50) NULL,
              tax_address_city varchar(200) NULL,
              tax_address_country varchar(200) NULL,
              is_principal_address_tax_address boolean NOT NULL,
              is_french_tax_resident boolean NOT NULL,
              nif varchar(200) NULL,
              email varchar(200) NULL,
              mobile_phone_number varchar(50) NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NULL,
              CONSTRAINT pk_contact_details PRIMARY KEY (id),
              CONSTRAINT fk_contact_details_user_transactions_user_transaction_id FOREIGN KEY (id) REFERENCES cnp.user_transaction (id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.family_info (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              policy_holder_id varchar(50) NOT NULL,
              marital_status varchar(60) NULL,
              matrimonial_agreement_type varchar(60) NULL,
              dependent_children integer NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NULL,
              CONSTRAINT pk_family_info PRIMARY KEY (id),
              CONSTRAINT fk_family_info_user_transactions_user_transaction_id FOREIGN KEY (id) REFERENCES cnp.user_transaction (id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.further_info (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              policy_holder_id varchar(50) NOT NULL,
              is_politically_exposed boolean NULL,
              is_american_citizen_or_tax_citizen boolean NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NULL,
              CONSTRAINT pk_further_info PRIMARY KEY (id),
              CONSTRAINT fk_further_info_user_transactions_user_transaction_id FOREIGN KEY (id) REFERENCES cnp.user_transaction (id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.identity (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              policy_holder_id varchar(50) NOT NULL,
              id_type varchar(100) NULL,
              id_number varchar(50) NULL,
              issued_by varchar(100) NULL,
              issued_date varchar(200) NULL,
              expiration_date varchar(200) NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NULL,
              CONSTRAINT pk_identity PRIMARY KEY (id),
              CONSTRAINT fk_identity_user_transactions_user_transaction_id FOREIGN KEY (id) REFERENCES cnp.user_transaction (id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.income (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              policy_holder_id varchar(50) NOT NULL,
              monthly_income decimal NULL,
              assets_no_real_estate decimal NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NULL,
              CONSTRAINT pk_income PRIMARY KEY (id),
              CONSTRAINT fk_income_user_transaction_user_transaction_id FOREIGN KEY (id) REFERENCES cnp.user_transaction (id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.job_info (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              policy_holder_id varchar( 50) NULL,
              professional_situation varchar(150) NULL,
              csp_type_code varchar(50) NOT NULL,
              activity_area varchar(150) NULL,
              occupation varchar(150) NULL,
              practiced_since varchar(200) NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NULL,
              CONSTRAINT pk_job_info PRIMARY KEY (id),
              CONSTRAINT fk_job_info_user_transactions_user_transaction_id FOREIGN KEY (id) REFERENCES cnp.user_transaction (id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.original_json (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              transaction_id varchar(50) NOT NULL,
              original_json varchar(10000) NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NULL,
              CONSTRAINT pk_original_json PRIMARY KEY (id),
              CONSTRAINT fk_original_json_user_transactions_user_transaction_id FOREIGN KEY (id) REFERENCES cnp.user_transaction (id) ON DELETE CASCADE
          );

          CREATE TABLE cnp.personal_infos (
              id integer GENERATED BY DEFAULT AS IDENTITY,
              policy_id varchar(50) NOT NULL,
              role varchar(50) NULL,
              person_id varchar(50) NULL,
              external_reference varchar(50) NULL,
              client_number varchar(50) NULL,
              title varchar(50) NULL,
              legal_form varchar(100) NULL,
              birth_name varchar(100) NULL,
              last_name varchar(100) NOT NULL,
              first_name varchar(100) NULL,
              second_first_name varchar(100) NULL,
              third_first_name varchar(100) NULL,
              birth_date varchar(200) NULL,
              birth_zip_code varchar(50) NULL,
              insee_city_code varchar(50) NULL,
              birth_city varchar(100) NULL,
              birth_country varchar(100) NULL,
              nationality varchar(100) NULL,
              second_nationality varchar(100) NULL,
              legal_capacity varchar(150) NULL,
              created_date timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP at time zone 'UTC'),
              created_by varchar(50) NOT NULL,
              updated_date timestamp with time zone NOT NULL,
              updated_by varchar(50) NOT NULL,
              CONSTRAINT pk_personal_infos PRIMARY KEY (id),
              CONSTRAINT fk_personal_infos_user_transactions_user_transaction_id FOREIGN KEY (id) REFERENCES cnp.user_transaction (id) ON DELETE CASCADE
          );

          CREATE INDEX ix_contact_details_email ON cnp.contact_details (email);
          CREATE INDEX ix_contact_details_policy_holder_id ON cnp.contact_details (policy_holder_id);
          CREATE INDEX ix_family_info_policy_holder_id ON cnp.family_info (policy_holder_id);
          CREATE INDEX ix_further_info_policy_holder_id ON cnp.further_info (policy_holder_id);
          CREATE INDEX ix_identity_id_number ON cnp.identity (id_number);
          CREATE INDEX ix_identity_policy_holder_id ON cnp.identity (policy_holder_id);
          CREATE INDEX ix_income_policy_holder_id ON cnp.income (policy_holder_id);
          CREATE INDEX ix_job_info_policy_holder_id ON cnp.job_info (policy_holder_id);
          CREATE INDEX ix_original_json_transaction_id ON cnp.original_json (transaction_id);
          CREATE INDEX ix_personal_infos_client_number ON cnp.personal_infos (client_number);
          CREATE INDEX ix_personal_infos_last_name ON cnp.personal_infos (last_name);
          CREATE INDEX ix_personal_infos_policy_id ON cnp.personal_infos (policy_id);
          CREATE INDEX ix_user_transaction_policy_holder_id ON cnp.user_transaction (policy_holder_id);
          CREATE INDEX ix_user_transaction_transaction_id ON cnp.user_transaction (transaction_id);
          CREATE INDEX ix_user_transaction_user_id_policy_holder_id ON cnp.user_transaction (user_id, policy_holder_id);
          
          COMMIT;
  metrics:
    auth:
      database: policy_act_policyholders
  migration_isolate: false
  backup:
    enabled: false
    cron:
      image:
        tag: 13-9
      schedule: "0 2 * * *" # 2am every day
      storageSize: 1Gi
      env:
        - name: DB_LOGIN
          value: svc_policy_act_policyholder_ci
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: password
        - name: FTP_LOGIN
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: ftp-login
        - name: FTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-backup
              key: ftp-password
        - name: PGPASSFILE
          value: /tmp/.pgpass
        - name: RETENTION_DAY
          value: "10"
    database:
      name: policy_act_policyholders

