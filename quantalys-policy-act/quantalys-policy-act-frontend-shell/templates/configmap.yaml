kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "quantalys.policy.act.frontend.shell.fullname" . }}-config
data:
  nginx.conf: |
    {{- tpl .Values.nginx_config . | nindent 4 }}

  config.js: |
    var ShellConfig = {
        baseUrl: 'https://{{ .Values.hosts | first }}', // baseUrl utilisée pour charger les assets dans les templates
        keycloakConfig: {
            url: 'https://{{ .Values.config.keycloak.url }}/auth',
            logoutRedirectUrl: 'https://{{ .Values.hosts | first }}', // peut être différente de l'application elle-même
            realm: '{{ .Values.config.keycloak.realm }}',
            clientId: '{{ .Values.config.keycloak.client_id }}',
            loginOptions: {
                idpHint: '',
            },
        },
        microfrontends: [
          'shiftSimplified'
        ],
        urls: {
            remotes: {
                shiftSimplified: 'https://{{ .Values.config.mfe.shift_simplified.host }}/remoteEntry.js'
            },
            configs: {
                shiftSimplified: 'https://{{ .Values.config.mfe.shift_simplified.host }}/assets/config/config.js'
            },
            fonts: {
                shiftSimplified: 'https://{{ .Values.config.mfe.shift_simplified.host }}/assets/basalte/fonts.css'
            },
        },        
        version: '1.0.0'
      };

      // pour Angular
      if (typeof window !== 'undefined') {
          window.ShellConfig = ShellConfig;

          // chargement des configs des microfrontends consommés
          var configs = ShellConfig.urls.configs;
          Object.keys(configs).forEach(function (key) {
              var script = document.createElement('script');
              script.src = configs[key];
              document.head.appendChild(script);
          });

          var fonts = ShellConfig.urls.fonts;
          Object.keys(fonts).forEach(function (key) {
              var link = document.createElement('link');
              link.rel = 'stylesheet';
              link.type = 'text/css';
              link.href = fonts[key];
              link.media = 'all';
              document.head.appendChild(link);
          });
      }

      // pour Webpack
      if (typeof exports !== 'undefined') {
          exports.ShellConfig = ShellConfig;
      }

