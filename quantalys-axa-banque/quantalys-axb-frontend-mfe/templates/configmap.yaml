kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "quantalys.axb.frontend.mfe.fullname" . }}-config
data:
  nginx.conf: |
    {{- tpl .Values.nginx_config . | nindent 4 }}

  config.js: |
    var ActsMfeShiftConfig = {
        baseUrl: 'https://{{ .Values.hosts | first }}', // baseUrl utilisée pour charger les assets dans les templates
        redirectURLOperations: 'https://{{ .Values.config.redirect.operations }}',
        redirectUrlContract: 'https://{{ .Values.config.redirect.contract }}',        
        keycloakConfig: {
            url: 'https://{{ .Values.config.keycloak.url }}/auth',
            logoutRedirectUrl: 'https://{{ .Values.hosts | first }}', // peut être différente de l'application elle-même
            realm: '{{ .Values.config.keycloak.realm }}',
            clientId: '{{ .Values.config.keycloak.client_id }}',
            loginOptions: {
                idpHint: '',
            },
        },
        urls: {
            remotes: {},
            configs: {},
            fonts: {},
            apis: {
                backend: 'https://{{ .Values.config.backend.url }}',
            },
        },
        version: '{{ .Values.image.tag }}'
      };

    // pour Angular
    if (typeof window !== 'undefined') {
        window.ActsMfeShiftConfig = ActsMfeShiftConfig;

        // chargement des configs des microfrontends consommés
        var configs = ActsMfeShiftConfig.urls.configs;
        Object.keys(configs).forEach(function (key) {
            var script = document.createElement('script');
            script.src = configs[key];
            document.head.appendChild(script);
        });

        var fonts = ActsMfeShiftConfig.urls.fonts;
        Object.keys(fonts).forEach(function (key) {
            var link = document.createElement('link');
            link.rel = 'stylesheet';
            link.type = 'text/css';
            link.href = fonts[key];
            link.media = 'all';
            document.head.appendChild(link);
        });
     }

    // pour Webpack
    if (typeof exports !== 'undefined') {
        exports.ActsMfeShiftConfig = ActsMfeShiftConfig;
    }
